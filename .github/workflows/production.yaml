name: Production Pipeline

on:
  push:
    branches:
        - deploy/prod
  workflow_dispatch:
    inputs:
      branch:
        description: 'Select the branch to deploy'
        required: true
        default: 'deploy/prod'
        type: choice
        options:
          - deploy/prod

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Java
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin' # Choose the distribution (temurin, zulu, etc.)
        java-version: '17'      # Set your project's Java version
        cache: 'maven'

    - name: Build with Maven
      run: mvn clean package -DskipTests

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker image
      run: docker build . -t ${{ secrets.DOCKER_USERNAME }}/talenthub-be:prod

    - name: Push Docker image to Docker Hub
      run: docker push ${{ secrets.DOCKER_USERNAME }}/talenthub-be:prod

  deploy:
    runs-on: ubuntu-latest
    needs: build # Ensures deploy only runs if the build job succeeds
    steps:
    - name: Get Github action IP
      id: ip
      uses: haythem/public-ip@v1.2

    - name: Add Github Actions IP to Security group
      run: |
        aws ec2 authorize-security-group-ingress --group-name ${{ vars.AWS_SG_PROD_NAME }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ vars.AWS_DEFAULT_REGION }}

    - name: Deploy via SSH
      uses: appleboy/ssh-action@v1.0.3 # Use the appleboy/ssh-action for SSH commands
      with:
        host: ${{ secrets.SSH_HOST_PROD }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        passphrase: "Lecat2132@"
        port: 22
        script: |
          docker rm -f talenthub-be-prod || true
          docker rmi ${{ secrets.DOCKER_USERNAME }}/talenthub-be:prod || true
          docker pull ${{ secrets.DOCKER_USERNAME }}/talenthub-be:prod
          docker run -d --name talenthub-be-prod --restart unless-stopped --env-file /opt/talenthub-env/be-prod.env --log-driver=loki --log-opt loki-url="${{ vars.MONITOR_LOG_ENPOINT }}" --log-opt loki-retries=5 --log-opt loki-batch-size=400 -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/talenthub-be:prod

    - name: Remove Github Actions IP from security group
      run: |
        aws ec2 revoke-security-group-ingress --group-name ${{ vars.AWS_SG_PROD_NAME }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ vars.AWS_DEFAULT_REGION }}
      if: always()
